{"version":3,"file":"static/js/99.8a53329e.chunk.js","mappings":"oNAIaA,EAAmBC,EAAAA,GAAAA,GAAH,uJAShBC,GAAmBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0I,SCTd,SAASG,EAAT,GAA8B,IAATC,EAAQ,EAARA,MAC5BC,GAAWC,EAAAA,EAAAA,MACf,OACA,SAACP,EAAD,UACGK,GAASA,EAAMG,KAAI,kBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,eAAgBC,EAA7B,EAA6BA,KAA7B,OAClB,SAACV,EAAD,CAAkBW,MAAO,CAACC,KAAMR,GAC9BS,GAAE,kBAAaN,GADjB,0BAGGC,QAHH,IAGGA,EAAAA,EAASC,SAHZ,QAG8BC,GADvBH,U,wMCTFO,EAAaf,EAAAA,GAAAA,KAAH,4CAIVgB,EAAehB,EAAAA,GAAAA,MAAH,wHAOZiB,EAAejB,EAAAA,GAAAA,OAAH,iJ,mBCJV,SAASkB,IAAqB,IAAD,IAC5C,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMrB,GAAWC,EAAAA,EAAAA,MACXqB,EAAQF,EAAaG,IAAI,SAwB/B,OAhBEC,EAAAA,EAAAA,YAAW,WAAK,wCAEd,2FACER,GAAW,GADb,kBAG8BS,EAAAA,GAA2BH,GAAOI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,WAHlF,OAGUC,EAHV,OAIIX,EAAUW,GAJd,gDAOIC,EAAAA,GAAAA,MAAY,uDAPhB,yBASUd,GAAW,GATrB,6EAFc,sBACTM,GADS,mCAadS,KACA,CAACT,KAGH,iCACA,UAAC,KAAD,CAAMb,GAAE,IAAR,WAAgB,SAAC,MAAD,IAAhB,wBACA,UAAC,KAAD,CAAMA,GAAE,iBAAET,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAKD,MAAO,CAACC,KAAMR,GAAtD,WAAiE,SAAC,MAAD,IAAjE,gBACA,UAACU,EAAD,CAAYsB,SA1Bc,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAYF,EAAMG,cAAcC,SAASf,MAAMgB,MACrDjB,EAAgB,CAACC,MAAOa,KAuB1B,WACE,SAACxB,EAAD,CACIL,KAAK,QACLiC,UAAQ,EACRpC,GAAG,YACH,aAAW,SACXqC,UAAU,IACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEhB,SAAChC,EAAD,CAAe6B,KAAK,SAApB,UACE,0CAGH1B,IAAW,SAAC8B,EAAA,EAAD,IACX5B,IAAU,SAACnB,EAAA,EAAD,CAAYC,MAAOkB,S,6KCvDzB,SAAS6B,IAGd,OAFoBC,IAAAA,IAAA,2FACnBrB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,QAItB,SAASC,EAAiB/C,GAG/B,OAFsB4C,IAAAA,IAAA,6CAAgD5C,EAAhD,wEACrBuB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,QAItB,SAASE,EAAoBhD,GAGlC,OAF2B4C,IAAAA,IAAA,6CAAgD5C,EAAhD,qEAC1BuB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,QAItB,SAASG,EAAoBjD,GAGlC,OAF2B4C,IAAAA,IAAA,6CAAgD5C,EAAhD,4EAC1BuB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,QAItB,SAASI,EAAkB/B,GAGhC,OAF0ByB,IAAAA,IAAA,6IAAgJzB,IACzKI,MAAK,SAAAsB,GAAQ,OAAIA,EAASC","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.js","services/fetch-movies-api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const ListMoviesStyled = styled.ol`\ndisplay: flex;\nalign-items: center;\nflex-direction: column;\npadding-top: 20px;\nlist-style: none;\ncounter-reset: section;\n`;\n\nexport const ItemMoviesStyled = styled(NavLink)`\ncounter-increment: section;\n::before{\ncontent: counters(section,\".\") \". \";\ncolor: red;\nfont-weight: bold;\n}\n`\n","import { useLocation } from \"react-router-dom\";\nimport {ListMoviesStyled, ItemMoviesStyled} from \"./MoviesList.styled\";\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({items}) {\n  const location = useLocation();  \n    return(  \n    <ListMoviesStyled >     \n      {items && items.map(({id, title, original_title, name }) =>      \n        <ItemMoviesStyled state={{from: location}}\n          to={`/movies/${id}`}\n          key={id}>\n          {title ?? original_title ?? name}       \n        </ItemMoviesStyled>)}\n    </ListMoviesStyled>  \n    )}\n\n    MoviesList.propTypes = {\n      items: PropTypes.array.isRequired    \n    };\n  \n","import styled from \"styled-components\";\n\nexport const FormStyled = styled.form`\npadding-top: 20px;\n`;\n\nexport const SearchStyled = styled.input`\nwidth: 200px;\nheight: 30px;\nborder-radius: 10px;\nbackground-color: rgba(255, 255, 128, .2);\n`;\n\nexport const ButtonStyled = styled.button`\nmargin-left: 10px;\nborder-radius: 8px;\nbackground-color: rgba(255, 255, 128, .9);\nborder-color: blue;\nheight: 25px;\n`;\n","import { useEffect, useState } from \"react\"\nimport toast from \"react-hot-toast\";\nimport { FaRegArrowAltCircleLeft } from \"react-icons/fa\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\"\nimport * as MoviesAPI from \"../../services/fetch-movies-api\"\nimport MoviesList from \"../../components/MoviesList\";\nimport {SearchStyled, FormStyled, ButtonStyled} from \"./MoviesPage.styled\";\nimport Loader from \"../../components/Loader\";\n\nexport default function MoviesPageSearch () {\nconst [loading, setLoading] = useState(false);\nconst [movies, setMovies] = useState(null)\nconst [searchParams, setSearchParams] = useSearchParams();\nconst location = useLocation();\nconst query = searchParams.get(\"query\")\n\n  const handlerSubmitUser = (event) => {\n    event.preventDefault()\n    const userQuery = event.currentTarget.elements.query.value  \n    setSearchParams({query: userQuery})\n  }\n\n  useEffect (()=> {\n    if (!query) {return}\n    async function fetchMoviesQ () {\n      setLoading(true)\n      try {\n        const fetchMovies = await MoviesAPI.fetchMoviesQuery(query).then(item => item.results)\n        setMovies(fetchMovies)\n      }\n      catch(error) {\n        toast.error(\"This didn't work. Thumping went wrong! Try again!!!\")\n      }\n      finally{setLoading(false)}\n    }\n    fetchMoviesQ ()    \n  },[query])\n\nreturn(\n  <>  \n  <Link to={`/`} ><FaRegArrowAltCircleLeft/> Trending movies </Link>\n  <Link to={location?.state?.from ?? \"/\"} state={{from: location}}><FaRegArrowAltCircleLeft/> Go Back </Link> \n  <FormStyled onSubmit={handlerSubmitUser}>\n    <SearchStyled \n        name=\"query\"\n        required        \n        id=\"film-name\"\n        aria-label=\"search\"\n        minLength=\"2\"\n        type=\"text\"                  \n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"        \n    />\n    <ButtonStyled  type=\"submit\">\n      <span>search</span>\n    </ButtonStyled>\n  </FormStyled>\n  {loading && <Loader/>}\n  {movies && <MoviesList items={movies}></MoviesList>}\n  </>\n)}","import axios from \"axios\";\n\n// API Key: e00a8fe96730262954d4fe74242d0bb1\n\nexport function fetchMoviesAPI () {\n  const fetchMovies = axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=e00a8fe96730262954d4fe74242d0bb1`)\n  .then(response => response.data)\n  return fetchMovies\n}\n\nexport function fetchMoviesById (id) {\n  const fetchMoviesId = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=e00a8fe96730262954d4fe74242d0bb1&append_to_response=images`)\n  .then(response => response.data)\n  return fetchMoviesId\n}\n\nexport function fetchMoviesCredits (id) {\n  const fetchMoviesCredits = axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=e00a8fe96730262954d4fe74242d0bb1&language=en-US`)\n  .then(response => response.data)\n  return fetchMoviesCredits\n}\n\nexport function fetchMoviesReviews (id) {\n  const fetchMoviesReviews = axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=e00a8fe96730262954d4fe74242d0bb1&language=en-US&page=1`)\n  .then(response => response.data)\n  return fetchMoviesReviews\n}\n\nexport function fetchMoviesQuery (query) {\n  const fetchMoviesQueris = axios.get(`https://api.themoviedb.org/3/search/movie?api_key=e00a8fe96730262954d4fe74242d0bb1&language=en-US&page=1&include_adult=false&query=${query}`)\n  .then(response => response.data)\n  return fetchMoviesQueris}\n\n"],"names":["ListMoviesStyled","styled","ItemMoviesStyled","NavLink","MoviesList","items","location","useLocation","map","id","title","original_title","name","state","from","to","FormStyled","SearchStyled","ButtonStyled","MoviesPageSearch","useState","loading","setLoading","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","MoviesAPI","then","item","results","fetchMovies","toast","fetchMoviesQ","onSubmit","event","preventDefault","userQuery","currentTarget","elements","value","required","minLength","type","autoComplete","autoFocus","placeholder","Loader","fetchMoviesAPI","axios","response","data","fetchMoviesById","fetchMoviesCredits","fetchMoviesReviews","fetchMoviesQuery"],"sourceRoot":""}