{"version":3,"file":"static/js/439.9073158d.chunk.js","mappings":"qNAIaA,EAAmBC,EAAAA,GAAAA,GAAH,uJAShBC,GAAmBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0I,SCTd,SAASG,EAAT,GAA8B,IAATC,EAAQ,EAARA,MAC5BC,GAAWC,EAAAA,EAAAA,MACf,OACA,SAACP,EAAD,UACGK,GAASA,EAAMG,KAAI,kBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,eAAgBC,EAA7B,EAA6BA,KAA7B,OAClB,SAACV,EAAD,CAAkBW,MAAO,CAACC,KAAMR,GAC9BS,GAAE,kBAAaN,GADjB,0BAGGC,QAHH,IAGGA,EAAAA,EAASC,SAHZ,QAG8BC,GADvBH,U,4KCWFO,GAlBmBf,EAAAA,GAAAA,GAAH,gKASGA,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,6JASFA,EAAAA,GAAAA,GAAH,4E,mBCET,SAASiB,IACtB,MAnB4B,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAcF,OAZEC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,kBAGwBE,EAAAA,KAA2BC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,WAHrE,OAGUtB,EAHV,OAIIe,EAASf,GAJb,yEAOWiB,GAAW,GAPtB,6EADc,uBAAC,WAAD,wBAUdM,KACC,IACE,CAACvB,MAAAA,EAAOgB,QAAAA,GAGUQ,GAAlBxB,EAAP,EAAOA,MAAOgB,EAAd,EAAcA,QAEd,OACE,4BACE,SAACL,EAAD,6BACCK,IAAW,SAACS,EAAA,EAAD,IACXzB,IAAS,SAACD,EAAA,EAAD,CAAYC,MAAOA,S,6KC3B5B,SAAS0B,IAGd,OAFoBC,IAAAA,IAAA,2FACnBP,MAAK,SAAAQ,GAAQ,OAAIA,EAASP,QAItB,SAASQ,EAAiBzB,GAG/B,OAFsBuB,IAAAA,IAAA,6CAAgDvB,EAAhD,wEACrBgB,MAAK,SAAAQ,GAAQ,OAAIA,EAASP,QAItB,SAASS,EAAoB1B,GAGlC,OAF2BuB,IAAAA,IAAA,6CAAgDvB,EAAhD,qEAC1BgB,MAAK,SAAAQ,GAAQ,OAAIA,EAASP,QAItB,SAASU,EAAoB3B,GAGlC,OAF2BuB,IAAAA,IAAA,6CAAgDvB,EAAhD,4EAC1BgB,MAAK,SAAAQ,GAAQ,OAAIA,EAASP,QAItB,SAASW,EAAkBC,GAGhC,OAF0BN,IAAAA,IAAA,6IAAgJM,IACzKb,MAAK,SAAAQ,GAAQ,OAAIA,EAASP","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.js","services/fetch-movies-api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const ListMoviesStyled = styled.ol`\ndisplay: flex;\nalign-items: center;\nflex-direction: column;\npadding-top: 20px;\nlist-style: none;\ncounter-reset: section;\n`;\n\nexport const ItemMoviesStyled = styled(NavLink)`\ncounter-increment: section;\n::before{\ncontent: counters(section,\".\") \". \";\ncolor: red;\nfont-weight: bold;\n}\n`\n","import { useLocation } from \"react-router-dom\";\nimport {ListMoviesStyled, ItemMoviesStyled} from \"./MoviesList.styled\";\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({items}) {\n  const location = useLocation();  \n    return(  \n    <ListMoviesStyled >     \n      {items && items.map(({id, title, original_title, name }) =>      \n        <ItemMoviesStyled state={{from: location}}\n          to={`/movies/${id}`}\n          key={id}>\n          {title ?? original_title ?? name}       \n        </ItemMoviesStyled>)}\n    </ListMoviesStyled>  \n    )}\n\n    MoviesList.propTypes = {\n      items: PropTypes.array.isRequired    \n    };\n  \n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const ListMoviesStyled = styled.ol`\ndisplay: flex;\nalign-items: flex-start;\nflex-direction: column;\nlist-style: none;\ncounter-reset: section;\nlist-style-type: none;\n`;\n\nexport const ItemMoviesStyled = styled(Link)`\nlist-style: none;\ncounter-increment: section;\n::before{\ncontent: counters(section,\".\") \". \";\ncolor: red;\nfont-weight: bold;\n}\n`\nexport const TitleStyled = styled.h1`\ncolor: rgb(222, 160, 30);\ntext-align: center;\n}\n`\n\n","import { useEffect, useState } from \"react\"\nimport * as MoviesAPI from \"../../services/fetch-movies-api\";\nimport MoviesList from \"../../components/MoviesList\";\nimport {TitleStyled} from \"./HomePage.styled\";\nimport Loader from \"../../components/Loader\";\n\n  const useFetchTrendMovies = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);  \n    \n    useEffect(() => {\n      async function fetchTrendMovies () {\n        setLoading(true);\n        try {\n          const items = await MoviesAPI.fetchMoviesAPI().then(data => data.results)\n          setItems(items)\n        }\n        catch (error) {}\n        finally {setLoading(false)}\n      }\n      fetchTrendMovies()\n    }, [])\n  return {items, loading}  }\n\nexport default function HomePage() {  \n  const {items, loading} = useFetchTrendMovies()\n\n  return(\n    <div>\n      <TitleStyled>Trending today</TitleStyled>\n      {loading && <Loader/>}\n      {items && <MoviesList items={items}></MoviesList>}  \n    </div>\n  )\n}","import axios from \"axios\";\n\n// API Key: e00a8fe96730262954d4fe74242d0bb1\n\nexport function fetchMoviesAPI () {\n  const fetchMovies = axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=e00a8fe96730262954d4fe74242d0bb1`)\n  .then(response => response.data)\n  return fetchMovies\n}\n\nexport function fetchMoviesById (id) {\n  const fetchMoviesId = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=e00a8fe96730262954d4fe74242d0bb1&append_to_response=images`)\n  .then(response => response.data)\n  return fetchMoviesId\n}\n\nexport function fetchMoviesCredits (id) {\n  const fetchMoviesCredits = axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=e00a8fe96730262954d4fe74242d0bb1&language=en-US`)\n  .then(response => response.data)\n  return fetchMoviesCredits\n}\n\nexport function fetchMoviesReviews (id) {\n  const fetchMoviesReviews = axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=e00a8fe96730262954d4fe74242d0bb1&language=en-US&page=1`)\n  .then(response => response.data)\n  return fetchMoviesReviews\n}\n\nexport function fetchMoviesQuery (query) {\n  const fetchMoviesQueris = axios.get(`https://api.themoviedb.org/3/search/movie?api_key=e00a8fe96730262954d4fe74242d0bb1&language=en-US&page=1&include_adult=false&query=${query}`)\n  .then(response => response.data)\n  return fetchMoviesQueris}\n\n"],"names":["ListMoviesStyled","styled","ItemMoviesStyled","NavLink","MoviesList","items","location","useLocation","map","id","title","original_title","name","state","from","to","TitleStyled","Link","HomePage","useState","setItems","loading","setLoading","useEffect","MoviesAPI","then","data","results","fetchTrendMovies","useFetchTrendMovies","Loader","fetchMoviesAPI","axios","response","fetchMoviesById","fetchMoviesCredits","fetchMoviesReviews","fetchMoviesQuery","query"],"sourceRoot":""}